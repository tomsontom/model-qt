grammar org.ufacekit.qt.idl.dsl.QIdl with org.eclipse.xtext.xbase.Xbase

generate qIdl "http://www.ufacekit.org/qt/idl/dsl/QIdl"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

QtIdlTyp:
	element=( QtBuitinType | QtClass | QtNamespace );


//QtModule:
//	'module' name=ID '{'
//		namespaces+=[QtNamespace]*
//		classes+=[QtClass]* 
//	'}';

QtNamespace:
	'namespace' name=ID '{'
		namespaces+=QtNamespace*
		enums+=QtEnum*
		flags+=QtFlags*
		classes+=QtClass*
	'}'
;

QtType:
	QtEnum | QtClass | QtBuitinType;

QtOperations:
	QtFunction | QtSignal | QtSlot;

QtClass:
	'class' name=ID ('extends' superTypes+=[QtClass] (',' superTypes+=[QtClass])*)? '{'
		enums+=QtEnum*
		flags+=QtFlags*
		classes+=QtClass*
		properties+=QtProperty*
		constructors+=QtConstructor*
		operations+=QtOperations*
	'}';


QtConstructor:
	'constructor' '(' (params+=QtValue (',' params+=QtValue)*)? ');';

QtProperty:
	'property' type=QtValue ';';

QtEnum:
	'enumeration' name=ID '{'
		values+=QtEnumValue*
	'}';

QtFlags:
	'flags' name=ID ':' enumeration=[QtEnum];

QtEnumValue:
	name=ID '=' value=LiteralValue;

LiteralValue:
	(value+=[QtEnumValue] ('|' value+=[QtEnumValue])*) | INT | STRING;

QtBuitinType:
	'builtin' name=ID ':' value=JvmArgumentTypeReference;

QtFunction:
	visibility=Visibility const='const'? virtual=Virtuality? owner=Owner 'function' name=ID '(' (params+=QtValue (',' params+=QtValue)*)? ')' ':' returnValue=QtReturnValue ';';

QtValue:
	const='const'? valueType=Type? type=[QtType] name=ID;

QtReturnValue:
	const='const'? valueType=Type? type=[QtType];

QtSignal:
	'signal' name=ID '(' (params+=QtValue (',' params+=QtValue)*)? ')' ':' returnValue=QtReturnValue ';'; 

QtSlot:
	'slot' name=ID '(' (params+=QtValue (',' params+=QtValue)*)? ')' ':' returnValue=QtReturnValue ';';

enum Virtuality:
	virtual | purevirtual;

enum Visibility: 
	public | protected;

enum Owner:
	member | class;

enum Type:
	pointer | reference;

//terminal HEX returns ecore::EInt: '0x' ('0'..'9' | 'A' .. 'F')+;
